openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/v1/cart:
    post:
      operationId: cart_create
      description: ''
      tags:
      - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/v1/categories:
    get:
      operationId: categories_list
      description: ''
      tags:
      - categories
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/order:
    get:
      operationId: order_retrieve
      description: ''
      tags:
      - order
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: order_create
      description: ''
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/partner/orders:
    get:
      operationId: partner_orders_retrieve
      description: ''
      tags:
      - partner
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/state:
    get:
      operationId: partner_state_retrieve
      description: ''
      tags:
      - partner
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: partner_state_create
      description: ''
      tags:
      - partner
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/partner/update:
    post:
      operationId: partner_update_create
      description: ''
      tags:
      - partner
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/password_reset:
    post:
      operationId: password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/password_resetconfirm/:
    post:
      operationId: password_resetconfirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - password_resetconfirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/v1/password_resetvalidate_token/:
    post:
      operationId: password_resetvalidate_token_create
      description: An Api View which provides a method to verify that a token is valid
      tags:
      - password_resetvalidate_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
  /api/v1/products:
    get:
      operationId: products_retrieve
      description: ''
      tags:
      - products
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/register:
    post:
      operationId: register_create
      description: ''
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/v1/shops/:
    get:
      operationId: shops_list
      description: ''
      tags:
      - shops
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
    post:
      operationId: shops_create
      description: ''
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /api/v1/shops/{id}/:
    get:
      operationId: shops_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shops
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    put:
      operationId: shops_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    patch:
      operationId: shops_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShop'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    delete:
      operationId: shops_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shops
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/contacts/:
    get:
      operationId: user_contacts_list
      description: ''
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
          description: ''
    post:
      operationId: user_contacts_create
      description: ''
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /api/v1/user/contacts/{id}/:
    get:
      operationId: user_contacts_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: user_contacts_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    patch:
      operationId: user_contacts_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContact'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: user_contacts_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ordered_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        dt:
          type: string
          format: date-time
          readOnly: true
      required:
      - dt
      - id
      - ordered_items
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 40
      required:
      - id
      - name
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 100
        house:
          type: string
          maxLength: 15
        building:
          type: string
          maxLength: 15
        apartment:
          type: string
          maxLength: 15
        user:
          type: integer
          writeOnly: true
        phone:
          type: string
          title: Phone number
          maxLength: 20
      required:
      - city
      - id
      - phone
      - street
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ordered_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        dt:
          type: string
          format: date-time
          readOnly: true
        total_sum:
          type: integer
        contact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          readOnly: true
      required:
      - contact
      - dt
      - id
      - ordered_items
      - total_sum
    OrderItemCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_info:
          allOf:
          - $ref: '#/components/schemas/ProductInfo'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        order:
          type: integer
          writeOnly: true
      required:
      - id
      - product_info
      - quantity
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    PatchedContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 100
        house:
          type: string
          maxLength: 15
        building:
          type: string
          maxLength: 15
        apartment:
          type: string
          maxLength: 15
        user:
          type: integer
          writeOnly: true
        phone:
          type: string
          title: Phone number
          maxLength: 20
    PatchedShop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        url:
          type: string
          format: uri
          nullable: true
          title: Link
          maxLength: 200
        state:
          type: boolean
          title: 'On'
        user:
          type: integer
          nullable: true
    Product:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        category:
          type: integer
      required:
      - name
    ProductInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          maxLength: 80
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        shop:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        price_rrc:
          type: integer
          maximum: 2147483647
          minimum: 0
        product_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          readOnly: true
      required:
      - id
      - price
      - price_rrc
      - product
      - product_parameters
      - quantity
    ProductParameter:
      type: object
      properties:
        parameter:
          type: integer
        value:
          type: string
          maxLength: 100
      required:
      - value
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        company:
          type: string
          maxLength: 40
        position:
          type: string
          maxLength: 40
      required:
      - company
      - email
      - first_name
      - last_name
      - password
      - password2
      - position
      - username
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        url:
          type: string
          format: uri
          nullable: true
          title: Link
          maxLength: 200
        state:
          type: boolean
          title: 'On'
        user:
          type: integer
          nullable: true
      required:
      - id
      - name
    StateEnum:
      enum:
      - CART
      - NEW
      - CONFIRMED
      - ASSEMBLED
      - SENT
      - DELIVERED
      - CANCELED
      type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
